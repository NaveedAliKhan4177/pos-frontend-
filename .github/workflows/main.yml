name: Deploy to Amazon ECS

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-south-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push Docker image to ECR
        run: |
          IMAGE_TAG=$(date +%s)
          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV
          docker build -t ${{ secrets.ECR_REPO }}:$IMAGE_TAG .
          docker push ${{ secrets.ECR_REPO }}:$IMAGE_TAG

      - name: Render ECS task definition
        id: task-def
        run: |
          jq --arg IMAGE "${{ secrets.ECR_REPO }}:${IMAGE_TAG}" \
             '.containerDefinitions[0].image = $IMAGE' ecs-task-def.json > ecs-task-def-updated.json

      - name: Register ECS task definition
        id: register-task-def
        run: |
          aws ecs register-task-definition \
            --cli-input-json file://ecs-task-def-updated.json \
            --region ap-south-1 \
            --query 'taskDefinition.taskDefinitionArn' \
            --output text > task-def-arn.txt
          echo "TASK_DEF_ARN=$(cat task-def-arn.txt)" >> $GITHUB_ENV

      - name: Update ECS service
        run: |
          aws ecs update-service \
            --cluster ${{ secrets.ECS_CLUSTER_NAME }} \
            --service ${{ secrets.ECS_SERVICE_NAME }} \
            --task-definition ${{ env.TASK_DEF_ARN }} \
            --region ap-south-1
