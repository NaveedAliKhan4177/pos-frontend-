name: Deploy Frontend to AWS ECS

on:
  push:
    branches:
      - main  # Trigger deployment when pushing to main branch

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      AWS_REGION: "ap-south-1"
      ECS_CLUSTER: "staging-cluster"
      ECS_SERVICE_FRONTEND: "pos-frontend"
      ECS_TASK_DEF_NAME: "pos-frontend" # must match ECS Task Definition family name

    steps:
      # 1️⃣ Checkout this repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2️⃣ Clone `pos-frontend` repository (if needed)
      - name: Clone pos-frontend repository
        run: |
          git clone https://github.com/NaveedAliKhan4177/pos-frontend-.git
          ls -l pos-frontend-

      # 3️⃣ Login to Docker Hub
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      # 4️⃣ Build & Push Frontend Image
      - name: Build and Push Frontend Image
        run: |
          cd pos-frontend-
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/pos-frontend:latest .
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/pos-frontend:latest

      # 5️⃣ Configure AWS Credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      # 6️⃣ Download current ECS Task Definition
      - name: Get current task definition
        run: |
          aws ecs describe-task-definition \
            --task-definition $ECS_TASK_DEF_NAME \
            --query taskDefinition > task-def.json

      # 7️⃣ Update task definition with new image
      - name: Update image in task definition
        run: |
          IMAGE="${{ secrets.DOCKERHUB_USERNAME }}/pos-frontend:latest"
          NEW_TASK_DEF=$(jq --arg IMAGE "$IMAGE" '.containerDefinitions[0].image = $IMAGE' task-def.json)
          echo "$NEW_TASK_DEF" > new-task-def.json

      # 8️⃣ Register new task definition
      - name: Register new task definition
        run: |
          aws ecs register-task-definition \
            --cli-input-json file://new-task-def.json

      # 9️⃣ Deploy updated service
      - name: Update ECS service
        run: |
          aws ecs update-service \
            --cluster $ECS_CLUSTER \
            --service $ECS_SERVICE_FRONTEND \
            --force-new-deployment
